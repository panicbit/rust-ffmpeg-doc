(function() {var implementors = {};
implementors["libc"] = [];implementors["ffmpeg"] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/util/frame/flag/struct.Flags.html' title='ffmpeg::util::frame::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/util/channel_layout/struct.ChannelLayout.html' title='ffmpeg::util::channel_layout::ChannelLayout'>ChannelLayout</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/format/stream/disposition/struct.Disposition.html' title='ffmpeg::format::stream::disposition::Disposition'>Disposition</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/format/format/flag/struct.Flags.html' title='ffmpeg::format::format::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/flag/struct.Flags.html' title='ffmpeg::codec::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/packet/flag/struct.Flags.html' title='ffmpeg::codec::packet::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/subtitle/flag/struct.Flags.html' title='ffmpeg::codec::subtitle::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/capabilities/struct.Capabilities.html' title='ffmpeg::codec::capabilities::Capabilities'>Capabilities</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/debug/struct.Debug.html' title='ffmpeg::codec::debug::Debug'>Debug</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/decoder/slice/struct.Flags.html' title='ffmpeg::codec::decoder::slice::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/decoder/conceal/struct.Conceal.html' title='ffmpeg::codec::decoder::conceal::Conceal'>Conceal</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/codec/decoder/check/struct.Check.html' title='ffmpeg::codec::decoder::check::Check'>Check</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/filter/flag/struct.Flags.html' title='ffmpeg::filter::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/software/scaling/flag/struct.Flags.html' title='ffmpeg::software::scaling::flag::Flags'>Flags</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/software/scaling/capability/struct.Capabilities.html' title='ffmpeg::software::scaling::capability::Capabilities'>Capabilities</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/core/ops/trait.Not.html' title='core::ops::Not'>Not</a> for <a class='struct' href='ffmpeg/software/resampling/flag/struct.Flags.html' title='ffmpeg::software::resampling::flag::Flags'>Flags</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
